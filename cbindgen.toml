# This is a template cbindgen.toml file with all of the default values.
# Some values are commented out because their absence is the real default.
#
# See https://github.com/eqrion/cbindgen/blob/master/docs.md#cbindgentoml
# for detailed documentation of every option here.

language = "C"

############## Options for Wrapping the Contents of the Header #################

# header = "/* Text to put at the beginning of the generated file. Probably a license. */"
# trailer = "/* Text to put at the end of the generated file */"
# include_guard = "my_bindings_h"
# pragma_once = true
# autogen_warning = "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */"
include_version = false
# namespace = "my_namespace"
namespaces = []
using_namespaces = []
sys_includes = []
includes = [ ]
no_includes = false
after_includes = ""
include_guard = "winit_h"

############################ Code Style Options ################################

braces = "SameLine"
line_length = 100
tab_width = 2
documentation = true
documentation_style = "auto"
documentation_length = "full"
line_endings = "LF" # also "CR", "CRLF", "Native"


############################# Codegen Options ##################################

style = "both"
sort_by = "Name" # default for `fn.sort_by` and `const.sort_by`
usize_is_size_t = true

[defines]
"target_os = freebsd" = "DEFINE_FREEBSD"
"feature = serde" = "DEFINE_SERDE"

[export]
include = []
[export]
exclude = [
    "Vec_u8",
    "winit_window_get_ns_view",
    "winit_window_ref_get_ns_view" ]
# prefix = "CAPI_"
item_types = []
renaming_overrides_prefixing = false

[export.rename]
"ValueBox_WinitEventLoop" = "EventLoop"
"ValueBox_WindowBuilder" = "WindowBuilder"
"ValueBox_Window" = "Window"

"VeryRawWindowHandle" = "RawWindowHandle"
"VeryRawDisplayHandle" = "RawDisplayHandle"

"ValueBox_StringBox" = "StringBox"
"StringBox" = "String"

"ValueBox_U128Box" = "U128Box"
"U128Box" = "U128"

"ValueBox_BoxerPointF32" = "PointBoxF32"
"PointBox_f32" = "PointF32"
"BoxerPointF32" = "PointF32"

"ValueBox_BoxerSizeU32" = "SizeBoxU32"
"SizeBox_u32" = "SizeU32"
"BoxerSizeU32" = "SizeU32"

"ValueBox_BoxerSizeI32" = "SizeBoxI32"
"SizeBox_i32" = "SizeI32"
"BoxerSizeI32" = "SizeI32"

"ValueBox_BoxerSizeF32" = "SizeBoxF32"
"SizeBox_f32" = "SizeF32"
"BoxerSizeF32" = "SizeF32"

"ValueBox_BoxerSizeU64" = "SizeBoxU64"
"SizeBox_u64" = "SizeU64"
"BoxerSizeU64" = "SizeU64"

"ValueBox_BoxerSizeF64" = "SizeBoxF64"
"SizeBox_f64" = "SizeF64"
"BoxerSizeF64" = "SizeF64"

[export.body]

[export.mangle]

[fn]
rename_args = "None"
# must_use = "MUST_USE_FUNC"
# no_return = "NO_RETURN"
# prefix = "START_FUNC"
# postfix = "END_FUNC"
args = "auto"
sort_by = "None"




[struct]
rename_fields = "None"
# must_use = "MUST_USE_STRUCT"
derive_constructor = false
derive_eq = false
derive_neq = false
derive_lt = false
derive_lte = false
derive_gt = false
derive_gte = false




[enum]
rename_variants = "None"
# must_use = "MUST_USE_ENUM"
add_sentinel = false
prefix_with_name = true
derive_helper_methods = true
derive_const_casts = false
derive_mut_casts = false
# cast_assert_name = "ASSERT"
derive_tagged_enum_destructor = false
derive_tagged_enum_copy_constructor = false
# We target C
enum_class = false
private_default_tagged_enum_constructor = false

[const]
allow_static_const = true
allow_constexpr = false
sort_by = "Name"

[macro_expansion]
bitflags = false

############## Options for How Your Rust library Should Be Parsed ##############

[parse]
parse_deps = true
include = [ "winit", "value-box", "geometry-box", "string-box", "value-box-ffi", "raw-window-handle-extensions" ]
exclude = []
clean = false
extra_bindings = ["value-box-ffi", "raw-window-handle-extensions"]

[parse.expand]
crates = []
all_features = false
default_features = true
features = [ ]
